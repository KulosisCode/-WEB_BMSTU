error_log  /var/log/nginx/error.log notice;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    upstream app_read{
        server webapp1:3000 weight=2;
        server webapp2:3000 weight=1;
        server webapp3:3000 weight=1;
    }

    upstream app_write {
        server webapp1:3000;
    }   

    map $request_method $upstream_location {
        GET app_read;
        default app_write;
    }

    upstream app_mirror {
        server webapp_mirror:3000;
    }

    map $request_method $app_mirror {
        default app_mirror;
    }

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:32m max_size=1g;
    proxy_cache_methods GET;

    more_clear_headers Server;
    more_set_headers 'Server: HotelBooking';

    server {
        listen       80;

        gzip on;
        gzip_comp_level 5;

        # location /swagger/ {
        #     proxy_pass http://$upstream_location;
        # }

        # location = /api/v1 {
        #     proxy_pass http://$upstream_location/swagger;
        # }
        # location  /api/v1/ {
        #     proxy_pass http://app_write/api/v1/;
        # }

        location /api/v1/ {
            proxy_pass_header Server;
            proxy_no_cache 1;

            proxy_set_header X-Real-IP  $remote_addr;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;

            proxy_pass http://$upstream_location;
        }

        location /swagger/ {
            proxy_pass http://app_write;
        }

        location = /api/v1 {
            proxy_pass http://app_write/swagger;
        }

        location /legacy {
            proxy_pass http://app_write/old;
        }

        location /documentation {
            alias /static/;
            try_files $uri /readme.html;
        }

        location /documentation/readme{
            proxy_pass http://app_write/readme;
        }

        location /documentation/img/ {
            root /static/;
        }

        location /benchmark {
            alias /static/;
            try_files $uri /bench.html;
        }

        location /benchmark/bench.md {
            root /static/;
            index bench.md;
            charset UTF-8;
            add_header content-type "text/markdown; charset=utf-8";
        }

        location /benchmark/img/ {
            root /static/;
        }

        location / {
            root /static;
            index index.html;
        }

        location /test {
            root /static/;
            try_files $uri /index.html;
        }

        location /admin {
            return 301 http://localhost:5050;
        }

        location /status {
            stub_status;
        }


        location = /mirror1/api/v1 {
            proxy_pass http://app_mirror/swagger/;
        }

        location /mirror1/swagger/ {
            proxy_pass http://app_mirror/swagger/;
        }

        location /mirror1/api/v1/ {
            proxy_pass http://app_mirror/api/v1/;
        }
    }

}
# location /documentation/README.md {
        #     root /static/;
        #     index README.md;
        #     charset UTF-8;
        #     add_header content-type "text/markdown; charset=utf-8";
        # }